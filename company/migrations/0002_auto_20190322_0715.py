# Generated by Django 2.0.13 on 2019-03-22 06:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Emp_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('type', models.CharField(choices=[('B2B', 'B2B'), ('Pernament', 'Pernament')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('level', models.CharField(choices=[('Junior', 'Junior'), ('Regular', 'Regular'), ('Senior', 'Senior')], max_length=10)),
                ('min_salary', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('max_salary', models.IntegerField(default=None)),
                ('description', models.TextField()),
                ('clausule', models.TextField()),
                ('city', models.CharField(choices=[('Warszawa', 'Warszawa'), ('Poznan', 'Poznan'), ('Szczecin', 'Szczecin'), ('Gdansk', 'Gdansk'), ('Krakow', 'Krakow'), ('Wroclaw', 'Wroclaw'), ('Katowice', 'Katowice'), ('Gliwice', 'Gliwice')], default=None, max_length=20)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('about', models.TextField(default=None, max_length=500)),
                ('photo', models.ImageField(blank=True, default=None, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('CEO', 'Chief Executive Officer'), ('CTO', 'Chief Technology Officer'), ('COO', 'Chief Operating Officer'), ('CFO', 'Chief Financial Officer'), ('Co-Founder', 'Co-Founder'), ('Lead Software Developer', 'Lead Software Developer'), ('Software Developer', 'Software Developer'), ('Front-end Developer', 'Front-end Developer'), ('Back-end Developer', 'Back-end Developer'), ('QA Engineer', 'QA Engineer'), ('Scrum Master', 'Scrum Master'), ('HR Recruiter', 'HR recruiter')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Stack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('PHP', 'PHP'), ('js', 'JavaScript'), ('ang', 'Angular'), ('java', 'Java'), ('ruby', 'Ruby'), ('ror', 'Ruby on Rails'), ('jee', 'Java EE'), ('python', 'Python'), ('django', 'Django')], max_length=30)),
                ('icon', models.CharField(choices=[('/static/icons/stack/php.png', 'PHP'), ('/static/icons/stack/javascript.png', 'JavaScript')], max_length=80)),
            ],
        ),
        migrations.RenameField(
            model_name='company',
            old_name='company_headquarters',
            new_name='name',
        ),
        migrations.RenameField(
            model_name='company',
            old_name='company_workers',
            new_name='workers',
        ),
        migrations.RemoveField(
            model_name='company',
            name='company_name',
        ),
        migrations.RemoveField(
            model_name='company',
            name='company_technologies',
        ),
        migrations.RemoveField(
            model_name='company',
            name='company_types',
        ),
        migrations.AddField(
            model_name='company',
            name='city',
            field=models.CharField(choices=[('Warszawa', 'Warszawa'), ('Poznan', 'Poznan'), ('Szczecin', 'Szczecin'), ('Gdansk', 'Gdansk'), ('Krakow', 'Krakow'), ('Wroclaw', 'Wroclaw'), ('Katowice', 'Katowice'), ('Gliwice', 'Gliwice')], default=None, max_length=15),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='company',
            name='facebook',
            field=models.TextField(blank=True, max_length=150, null=True, validators=[django.core.validators.URLValidator()]),
        ),
        migrations.AddField(
            model_name='company',
            name='icon',
            field=models.ImageField(blank=True, null=True, upload_to=''),
        ),
        migrations.AddField(
            model_name='company',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to=''),
        ),
        migrations.AddField(
            model_name='company',
            name='instagram',
            field=models.TextField(blank=True, max_length=150, null=True, validators=[django.core.validators.URLValidator()]),
        ),
        migrations.AddField(
            model_name='company',
            name='linkedin',
            field=models.TextField(blank=True, max_length=150, null=True, validators=[django.core.validators.URLValidator()]),
        ),
        migrations.AddField(
            model_name='company',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to=''),
        ),
        migrations.AddField(
            model_name='company',
            name='slug',
            field=models.SlugField(default=None, unique=True),
        ),
        migrations.AddField(
            model_name='company',
            name='students',
            field=models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], default=None, max_length=3),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='company',
            name='twitter',
            field=models.TextField(blank=True, max_length=150, null=True, validators=[django.core.validators.URLValidator()]),
        ),
        migrations.AddField(
            model_name='company',
            name='type',
            field=models.CharField(choices=[('Startup', 'Startup'), ('Software House', 'Software House'), ('E-commerce', 'E-commerce'), ('Corporation', 'Corporation')], default=None, max_length=15),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='company',
            name='website',
            field=models.TextField(blank=True, max_length=150, null=True, validators=[django.core.validators.URLValidator()]),
        ),
        migrations.AddField(
            model_name='company',
            name='youtube',
            field=models.TextField(blank=True, max_length=150, null=True, validators=[django.core.validators.URLValidator()]),
        ),
        migrations.AddField(
            model_name='person',
            name='position',
            field=models.ManyToManyField(to='company.Position'),
        ),
        migrations.AddField(
            model_name='job',
            name='company',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='company.Company'),
        ),
        migrations.AddField(
            model_name='job',
            name='emp_type',
            field=models.ManyToManyField(to='company.Emp_type'),
        ),
        migrations.AddField(
            model_name='job',
            name='stack',
            field=models.ManyToManyField(to='company.Stack'),
        ),
        migrations.AddField(
            model_name='company',
            name='team',
            field=models.ManyToManyField(to='company.Person'),
        ),
        migrations.AddField(
            model_name='company',
            name='technologies',
            field=models.ManyToManyField(to='company.Stack'),
        ),
    ]
